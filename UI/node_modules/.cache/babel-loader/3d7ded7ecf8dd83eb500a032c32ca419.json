{"ast":null,"code":"var _jsxFileName = \"/Users/toddstorm/workspace/mechanism-take-home/UI/src/containers/Home/Home.js\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport _ from 'lodash';\nimport Loading from '../../components/Loading/Loading';\nimport { Button, MenuItem, Select } from '@material-ui/core';\nimport useAppJwt from '../../hooks/useAppJwt';\nimport AddTicker from '../../components/AddTicker/AddTicker';\nconst axiosOptions = {\n  headers: {\n    'x-rapidapi-key': '2d158047e2msh522770a8007222fp157f9fjsn1232dc76b733',\n    'x-rapidapi-host': 'apidojo-yahoo-finance-v1.p.rapidapi.com'\n  }\n};\n\nconst Home = () => {\n  const [labels, setLabels] = useState([]);\n  const [series, setSeries] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [portfolioInitialTotal, setPortfolioInitialTotal] = useState(0);\n  const {\n    appToken\n  } = useAppJwt();\n  const [indexTicker, setIndexTicker] = useState(''); // initial index.\n\n  const portfolioOptions = {\n    headers: {\n      'Authorization': `Bearer ${appToken}`\n    }\n  };\n\n  const loadPortfolioData = async () => {\n    console.log(\"process.env.REACT_APP_PORFOLIO_SERVICE\", process.env.REACT_APP_PORFOLIO_SERVICE);\n    const portfolioData = await axios.get(process.env.REACT_APP_PORFOLIO_SERVICE, portfolioOptions);\n\n    const tickerValue = _.map(portfolioData.data, stock => {\n      return parseFloat(stock.valueOnAquired) * parseInt(stock.units);\n    });\n\n    const tickers = _.map(portfolioData.data, stock => {\n      return stock.ticker;\n    });\n\n    setPortfolioInitialTotal(_.sum(tickerValue));\n    const requests = [];\n\n    _.forEach(tickers, ticker => {\n      requests.push(axios.get(`${process.env.REACT_APP_QUOTE_SERVICE}/get-chart?interval=1d&symbol=${ticker}&range=1y&region=US`, axiosOptions));\n    });\n\n    axios.all(requests).then(axios.spread((...responses) => {\n      const newSeries = [];\n      const newLabels = [];\n      let i = 0;\n\n      _.forEach(responses, response => {\n        const quotes = _.get(response.data, 'chart.result[0].indicators.quote[0].close', []);\n\n        quotes[0] = tickerValue[i]; // initial investment\n\n        var j;\n\n        for (j = 1; j < quotes.length; j++) {\n          quotes[j] = quotes[j] * 100;\n        }\n\n        newSeries.push({\n          name: tickers[i],\n          type: 'spline',\n          data: quotes\n        });\n        i++;\n      });\n\n      setSeries(newSeries);\n      setLabels(newLabels);\n      setLoaded(true);\n    }));\n  };\n\n  const loadData = useCallback(async () => {\n    if (indexTicker === '') return;\n    const one = `${process.env.REACT_APP_QUOTE_SERVICE}/get-chart?interval=1d&symbol=${indexTicker}&range=1y&region=US`;\n    const requestOne = axios.get(one, axiosOptions);\n    axios.all([requestOne]).then(axios.spread((...responses) => {\n      const responseOne = responses[0];\n      setLoaded(true);\n\n      const newSeries = _.cloneDeep(series);\n\n      const data = _.get(responseOne.data, 'chart.result[0].indicators.quote[0].close', []);\n\n      const initialUnits = portfolioInitialTotal / data[0];\n\n      const formattedData = _.map(data, d => {\n        return d > 0 ? initialUnits * d : 0;\n      });\n\n      newSeries.push({\n        name: indexTicker,\n        type: 'spline',\n        data: formattedData\n      });\n\n      const lbls = _.map(_.get(responseOne.data, 'chart.result[0].timestamp', []), dt => {\n        const d = new Date(0);\n        d.setUTCSeconds(dt);\n        return d.toLocaleDateString(\"en-US\");\n      });\n\n      setLabels(lbls);\n      setSeries(newSeries);\n    })).catch(errors => {\n      console.log(\"Error getting data\", errors);\n    });\n  }, [indexTicker]);\n  useEffect(() => {\n    if (!_.isEmpty(appToken) && !loaded) {\n      loadPortfolioData();\n    }\n\n    if (portfolioInitialTotal > 0 && loaded) {\n      loadData();\n    }\n  }, [indexTicker, loadData, appToken, portfolioInitialTotal]);\n  if (!loaded) return /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  });\n  const options = {\n    chart: {\n      type: 'spline'\n    },\n    title: {\n      text: 'My Portfolio'\n    },\n    xAxis: {\n      categories: labels\n    },\n    series: series\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const onIndexChange = event => {\n    setIndexTicker(event.target.value);\n  };\n\n  const body = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    id: \"simple-modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, \"Text in a modal\"), /*#__PURE__*/React.createElement(\"p\", {\n    id: \"simple-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }\n  }, \"Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\"));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    value: indexTicker,\n    onChange: onIndexChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"NDX\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, \"NASDAQ\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"DJU\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, \"Dow Jones Average\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"MID\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, \"S&P 400\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"SPX\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, \"S&P 500\"))), series.length > 0 ? /*#__PURE__*/React.createElement(HighchartsReact, {\n    highcharts: Highcharts,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 28\n    }\n  }) : null, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOpen,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, \"Add Ticker\"), /*#__PURE__*/React.createElement(AddTicker, {\n    open: open,\n    handleClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, \"Test\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, \"Your initial portfolio total: \", portfolioInitialTotal), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, \"Based on your initial investment, the difference in choosing the market index \", indexTicker, \" is:\"));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/toddstorm/workspace/mechanism-take-home/UI/src/containers/Home/Home.js"],"names":["React","useCallback","useEffect","useState","axios","Highcharts","HighchartsReact","_","Loading","Button","MenuItem","Select","useAppJwt","AddTicker","axiosOptions","headers","Home","labels","setLabels","series","setSeries","loaded","setLoaded","open","setOpen","portfolioInitialTotal","setPortfolioInitialTotal","appToken","indexTicker","setIndexTicker","portfolioOptions","loadPortfolioData","console","log","process","env","REACT_APP_PORFOLIO_SERVICE","portfolioData","get","tickerValue","map","data","stock","parseFloat","valueOnAquired","parseInt","units","tickers","ticker","sum","requests","forEach","push","REACT_APP_QUOTE_SERVICE","all","then","spread","responses","newSeries","newLabels","i","response","quotes","j","length","name","type","loadData","one","requestOne","responseOne","cloneDeep","initialUnits","formattedData","d","lbls","dt","Date","setUTCSeconds","toLocaleDateString","catch","errors","isEmpty","options","chart","title","text","xAxis","categories","handleOpen","handleClose","onIndexChange","event","target","value","body"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,MAA3B,QAAyC,mBAAzC;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AACP,sBAAkB,oDADX;AAEP,uBAAmB;AAFZ;AADU,CAArB;;AAUA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACoB,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,KAAD,CAAhC;AAGA,QAAM,CAACsB,qBAAD,EAAwBC,wBAAxB,IAAoDvB,QAAQ,CAAC,CAAD,CAAlE;AACA,QAAM;AAAEwB,IAAAA;AAAF,MAAef,SAAS,EAA9B;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgC1B,QAAQ,CAAC,EAAD,CAA9C,CATiB,CASmC;;AAEpD,QAAM2B,gBAAgB,GAAG;AACvBf,IAAAA,OAAO,EAAE;AACP,uBAAkB,UAASY,QAAS;AAD7B;AADc,GAAzB;;AAMA,QAAMI,iBAAiB,GAAG,YAAY;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ,EAAsDC,OAAO,CAACC,GAAR,CAAYC,0BAAlE;AACA,UAAMC,aAAa,GAAG,MAAMjC,KAAK,CAACkC,GAAN,CAAUJ,OAAO,CAACC,GAAR,CAAYC,0BAAtB,EAAkDN,gBAAlD,CAA5B;;AACA,UAAMS,WAAW,GAAGhC,CAAC,CAACiC,GAAF,CAAMH,aAAa,CAACI,IAApB,EAA2BC,KAAD,IAAW;AACvD,aAAOC,UAAU,CAACD,KAAK,CAACE,cAAP,CAAV,GAAmCC,QAAQ,CAACH,KAAK,CAACI,KAAP,CAAlD;AACD,KAFmB,CAApB;;AAGA,UAAMC,OAAO,GAAGxC,CAAC,CAACiC,GAAF,CAAMH,aAAa,CAACI,IAApB,EAA2BC,KAAD,IAAW;AACnD,aAAOA,KAAK,CAACM,MAAb;AACD,KAFe,CAAhB;;AAGAtB,IAAAA,wBAAwB,CAACnB,CAAC,CAAC0C,GAAF,CAAMV,WAAN,CAAD,CAAxB;AACA,UAAMW,QAAQ,GAAG,EAAjB;;AACA3C,IAAAA,CAAC,CAAC4C,OAAF,CAAUJ,OAAV,EAAoBC,MAAD,IAAY;AAC5BE,MAAAA,QAAQ,CAACE,IAAT,CAAchD,KAAK,CAACkC,GAAN,CAAW,GAAEJ,OAAO,CAACC,GAAR,CAAYkB,uBAAwB,iCAAgCL,MAAO,qBAAxF,EAA8GlC,YAA9G,CAAd;AACF,KAFD;;AAGAV,IAAAA,KAAK,CAACkD,GAAN,CAAUJ,QAAV,EAAoBK,IAApB,CAAyBnD,KAAK,CAACoD,MAAN,CAAa,CAAC,GAAGC,SAAJ,KAAkB;AACtD,YAAMC,SAAS,GAAG,EAAlB;AACA,YAAMC,SAAS,GAAG,EAAlB;AACA,UAAIC,CAAC,GAAG,CAAR;;AACArD,MAAAA,CAAC,CAAC4C,OAAF,CAAUM,SAAV,EAAsBI,QAAD,IAAc;AACjC,cAAMC,MAAM,GAAGvD,CAAC,CAAC+B,GAAF,CAAMuB,QAAQ,CAACpB,IAAf,EAAqB,2CAArB,EAAkE,EAAlE,CAAf;;AACAqB,QAAAA,MAAM,CAAC,CAAD,CAAN,GAAYvB,WAAW,CAACqB,CAAD,CAAvB,CAFiC,CAEL;;AAE5B,YAAIG,CAAJ;;AACA,aAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,MAAM,CAACE,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AAClCD,UAAAA,MAAM,CAACC,CAAD,CAAN,GAAYD,MAAM,CAACC,CAAD,CAAN,GAAY,GAAxB;AACD;;AACDL,QAAAA,SAAS,CAACN,IAAV,CAAe;AACTa,UAAAA,IAAI,EAAElB,OAAO,CAACa,CAAD,CADJ;AAETM,UAAAA,IAAI,EAAE,QAFG;AAGTzB,UAAAA,IAAI,EAAEqB;AAHG,SAAf;AAKAF,QAAAA,CAAC;AACF,OAdD;;AAeAxC,MAAAA,SAAS,CAACsC,SAAD,CAAT;AACAxC,MAAAA,SAAS,CAACyC,SAAD,CAAT;AACArC,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAtBwB,CAAzB;AAuBD,GArCD;;AAuCA,QAAM6C,QAAQ,GAAGlE,WAAW,CAAC,YAAY;AACvC,QAAI2B,WAAW,KAAK,EAApB,EAAwB;AACxB,UAAMwC,GAAG,GAAI,GAAElC,OAAO,CAACC,GAAR,CAAYkB,uBAAwB,iCAAgCzB,WAAY,qBAA/F;AACA,UAAMyC,UAAU,GAAGjE,KAAK,CAACkC,GAAN,CAAU8B,GAAV,EAAetD,YAAf,CAAnB;AACAV,IAAAA,KAAK,CAACkD,GAAN,CAAU,CAACe,UAAD,CAAV,EAAwBd,IAAxB,CAA6BnD,KAAK,CAACoD,MAAN,CAAa,CAAC,GAAGC,SAAJ,KAAkB;AAC1D,YAAMa,WAAW,GAAGb,SAAS,CAAC,CAAD,CAA7B;AACAnC,MAAAA,SAAS,CAAC,IAAD,CAAT;;AACA,YAAMoC,SAAS,GAAGnD,CAAC,CAACgE,SAAF,CAAYpD,MAAZ,CAAlB;;AACA,YAAMsB,IAAI,GAAGlC,CAAC,CAAC+B,GAAF,CAAMgC,WAAW,CAAC7B,IAAlB,EAAwB,2CAAxB,EAAqE,EAArE,CAAb;;AAEA,YAAM+B,YAAY,GAAG/C,qBAAqB,GAAGgB,IAAI,CAAC,CAAD,CAAjD;;AACA,YAAMgC,aAAa,GAAGlE,CAAC,CAACiC,GAAF,CAAMC,IAAN,EAAaiC,CAAD,IAAO;AACvC,eAAOA,CAAC,GAAG,CAAJ,GAAQF,YAAY,GAAGE,CAAvB,GAA2B,CAAlC;AACD,OAFqB,CAAtB;;AAGAhB,MAAAA,SAAS,CAACN,IAAV,CAAe;AACba,QAAAA,IAAI,EAAErC,WADO;AAEbsC,QAAAA,IAAI,EAAE,QAFO;AAGbzB,QAAAA,IAAI,EAAEgC;AAHO,OAAf;;AAKA,YAAME,IAAI,GAAGpE,CAAC,CAACiC,GAAF,CAAMjC,CAAC,CAAC+B,GAAF,CAAMgC,WAAW,CAAC7B,IAAlB,EAAwB,2BAAxB,EAAqD,EAArD,CAAN,EAAiEmC,EAAD,IAAQ;AACnF,cAAMF,CAAC,GAAG,IAAIG,IAAJ,CAAS,CAAT,CAAV;AACAH,QAAAA,CAAC,CAACI,aAAF,CAAgBF,EAAhB;AACA,eAAOF,CAAC,CAACK,kBAAF,CAAqB,OAArB,CAAP;AACD,OAJY,CAAb;;AAKA7D,MAAAA,SAAS,CAACyD,IAAD,CAAT;AACAvD,MAAAA,SAAS,CAACsC,SAAD,CAAT;AACD,KAtB4B,CAA7B,EAsBIsB,KAtBJ,CAsBWC,MAAD,IAAY;AACpBjD,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCgD,MAAlC;AACD,KAxBD;AAyBD,GA7B2B,EA6BzB,CAACrD,WAAD,CA7ByB,CAA5B;AA+BA1B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACK,CAAC,CAAC2E,OAAF,CAAUvD,QAAV,CAAD,IAAwB,CAACN,MAA7B,EAAqC;AACnCU,MAAAA,iBAAiB;AAClB;;AACD,QAAIN,qBAAqB,GAAG,CAAxB,IAA6BJ,MAAjC,EAAyC;AACvC8C,MAAAA,QAAQ;AACT;AACF,GAPQ,EAON,CAACvC,WAAD,EAAcuC,QAAd,EAAwBxC,QAAxB,EAAkCF,qBAAlC,CAPM,CAAT;AASE,MAAI,CAACJ,MAAL,EAAa,oBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEjB,QAAM8D,OAAO,GAAG;AACdC,IAAAA,KAAK,EAAE;AACLlB,MAAAA,IAAI,EAAE;AADD,KADO;AAIdmB,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AADD,KAJO;AAOdC,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEvE;AADP,KAPO;AAUdE,IAAAA,MAAM,EAAEA;AAVM,GAAhB;;AAaA,QAAMsE,UAAU,GAAG,MAAM;AACvBjE,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMkE,WAAW,GAAG,MAAM;AACxBlE,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,QAAMmE,aAAa,GAAIC,KAAD,IAAW;AAC/B/D,IAAAA,cAAc,CAAC+D,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAIA,QAAMC,IAAI,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,EAAE,EAAC,oBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAG,IAAA,EAAE,EAAC,0BAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEAFF,CADF;AASE,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEnE,WAAf;AAA4B,IAAA,QAAQ,EAAE+D,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,eAGE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,eAIE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,CADF,CADF,EASGxE,MAAM,CAAC6C,MAAP,GAAgB,CAAhB,gBAAoB,oBAAC,eAAD;AAAiB,IAAA,UAAU,EAAE3D,UAA7B;AAAyC,IAAA,OAAO,EAAE8E,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,GAAoF,IATvF,eAUE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEM,UAAjB;AAA6B,IAAA,KAAK,EAAC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,eAYE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAElE,IAAjB;AAAuB,IAAA,WAAW,EAAEmE,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAoCjE,qBAApC,CAbF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uFAAoFG,WAApF,SAdF,CADF;AAkBD,CAtJD;;AAwJA,eAAeZ,IAAf","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport _ from 'lodash';\nimport Loading from '../../components/Loading/Loading';\nimport { Button, MenuItem, Select } from '@material-ui/core';\nimport useAppJwt from '../../hooks/useAppJwt';\nimport AddTicker from '../../components/AddTicker/AddTicker';\n\nconst axiosOptions = {\n  headers: {\n    'x-rapidapi-key': '2d158047e2msh522770a8007222fp157f9fjsn1232dc76b733',\n    'x-rapidapi-host': 'apidojo-yahoo-finance-v1.p.rapidapi.com',\n  }\n};\n\n\n\n\nconst Home = () => {\n  const [labels, setLabels] = useState([]);\n  const [series, setSeries] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [open, setOpen] = useState(false);\n\n\n  const [portfolioInitialTotal, setPortfolioInitialTotal] = useState(0);\n  const { appToken } = useAppJwt();\n  const [indexTicker, setIndexTicker] = useState(''); // initial index.\n\n  const portfolioOptions = {\n    headers: {\n      'Authorization': `Bearer ${appToken}`,\n    }\n  }\n\n  const loadPortfolioData = async () => {\n    console.log(\"process.env.REACT_APP_PORFOLIO_SERVICE\", process.env.REACT_APP_PORFOLIO_SERVICE);\n    const portfolioData = await axios.get(process.env.REACT_APP_PORFOLIO_SERVICE, portfolioOptions);\n    const tickerValue = _.map(portfolioData.data, (stock) => {\n      return parseFloat(stock.valueOnAquired) * parseInt(stock.units);\n    });\n    const tickers = _.map(portfolioData.data, (stock) => {\n      return stock.ticker;\n    });\n    setPortfolioInitialTotal(_.sum(tickerValue));\n    const requests = [];\n    _.forEach(tickers, (ticker) => {\n       requests.push(axios.get(`${process.env.REACT_APP_QUOTE_SERVICE}/get-chart?interval=1d&symbol=${ticker}&range=1y&region=US`, axiosOptions));\n    });\n    axios.all(requests).then(axios.spread((...responses) => {\n      const newSeries = [];\n      const newLabels = [];\n      let i = 0;\n      _.forEach(responses, (response) => {\n        const quotes = _.get(response.data, 'chart.result[0].indicators.quote[0].close', []);\n        quotes[0] = tickerValue[i]; // initial investment\n\n        var j;\n        for (j = 1; j < quotes.length; j++) {\n          quotes[j] = quotes[j] * 100;\n        }\n        newSeries.push({\n              name: tickers[i],\n              type: 'spline',\n              data: quotes,\n            });\n        i++;\n      });\n      setSeries(newSeries);\n      setLabels(newLabels);\n      setLoaded(true);\n    }))\n  };\n\n  const loadData = useCallback(async () => {\n    if (indexTicker === '') return;\n    const one = `${process.env.REACT_APP_QUOTE_SERVICE}/get-chart?interval=1d&symbol=${indexTicker}&range=1y&region=US`;\n    const requestOne = axios.get(one, axiosOptions);\n    axios.all([requestOne]).then(axios.spread((...responses) => {\n      const responseOne = responses[0]\n      setLoaded(true);\n      const newSeries = _.cloneDeep(series);\n      const data = _.get(responseOne.data, 'chart.result[0].indicators.quote[0].close', []);\n\n      const initialUnits = portfolioInitialTotal / data[0];\n      const formattedData = _.map(data, (d) => {\n        return d > 0 ? initialUnits * d : 0;\n      });\n      newSeries.push({\n        name: indexTicker,\n        type: 'spline',\n        data: formattedData,\n      });\n      const lbls = _.map(_.get(responseOne.data, 'chart.result[0].timestamp', []), (dt) => {\n        const d = new Date(0);\n        d.setUTCSeconds(dt);\n        return d.toLocaleDateString(\"en-US\");\n      });\n      setLabels(lbls);\n      setSeries(newSeries);\n    })).catch((errors) => {\n      console.log(\"Error getting data\", errors);\n    });\n  }, [indexTicker]);\n\n  useEffect(() => {\n    if (!_.isEmpty(appToken) && !loaded) {\n      loadPortfolioData()\n    }\n    if (portfolioInitialTotal > 0 && loaded) {\n      loadData();\n    }\n  }, [indexTicker, loadData, appToken, portfolioInitialTotal]);\n \n    if (!loaded) return <Loading />;\n\nconst options = {\n  chart: {\n    type: 'spline'\n  },\n  title: {\n    text: 'My Portfolio'\n  },\n  xAxis: {\n    categories: labels,\n  },\n  series: series,\n};\n\nconst handleOpen = () => {\n  setOpen(true);\n};\n\nconst handleClose = () => {\n  setOpen(false);\n};\n\nconst onIndexChange = (event) => {\n  setIndexTicker(event.target.value);\n}\n\nconst body = (\n  <div>\n    <h2 id=\"simple-modal-title\">Text in a modal</h2>\n    <p id=\"simple-modal-description\">\n      Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\n    </p>\n  </div>\n);\n\n  return (\n    <div>\n      <div>\n        <Select value={indexTicker} onChange={onIndexChange}>\n          <MenuItem value=\"NDX\">NASDAQ</MenuItem>\n          <MenuItem value=\"DJU\">Dow Jones Average</MenuItem>\n          <MenuItem value=\"MID\">S&P 400</MenuItem>\n          <MenuItem value=\"SPX\">S&P 500</MenuItem>\n        </Select>\n      </div>\n      {series.length > 0 ? <HighchartsReact highcharts={Highcharts} options={options} /> : null}\n      <Button onClick={handleOpen} color=\"primary\">Add Ticker</Button>\n      \n      <AddTicker open={open} handleClose={handleClose}>Test</AddTicker>\n      <div>Your initial portfolio total: {portfolioInitialTotal}</div>\n      <div>Based on your initial investment, the difference in choosing the market index {indexTicker} is:</div>\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}