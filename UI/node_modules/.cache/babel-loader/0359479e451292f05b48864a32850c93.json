{"ast":null,"code":"var _jsxFileName = \"/Users/toddstorm/workspace/mechanism-take-home/UI/src/components/AuthenticationButton/AuthenticationButton.js\";\nimport React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport Popper from '@material-ui/core/Popper';\nimport { Divider } from '@material-ui/core';\nimport styles from './AuthenticationButton.module.css';\nimport LogoutButton from '../LogoutButton/LogoutButton';\nimport useAppJwt from '../../hooks/useAppJwt';\n/*\n  Shows either login text button to allow a user to login, or a popper which will allow the user to log out or direct\n  to settings.\n*/\n\nconst AuthenticationButton = ({\n  className\n}) => {\n  const {\n    isAuthenticated,\n    user\n  } = useAppJwt();\n  const [anchorEl, setAnchorEl] = useState(null);\n  let userName;\n  let userPicture;\n  let userEmail = '';\n\n  if (isAuthenticated && !_.isEmpty(user)) {\n    const {\n      displayName,\n      photoURL,\n      email\n    } = user;\n    userName = displayName;\n    userPicture = photoURL;\n    userEmail = email;\n  }\n\n  const handleClick = event => {\n    setAnchorEl(anchorEl ? null : event && event.currentTarget);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const handleClickAway = event => {\n    if (!anchorEl.contains(event.target)) {\n      handleClick();\n    }\n  };\n\n  const combinedStyles = [className, styles.Container].join(' ');\n  const buttonToShow = /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: userName,\n    src: userPicture,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ClickAwayListener, {\n    onClickAway: handleClickAway,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Popper, {\n    open: open,\n    anchorEl: anchorEl,\n    className: styles.Popper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"My Account\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.PopperContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: userName,\n    src: userPicture,\n    className: styles.PopperAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, userName), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, userEmail), /*#__PURE__*/React.createElement(Divider, {\n    className: styles.Divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }))));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: combinedStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.UserName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, userName), buttonToShow);\n};\n\nAuthenticationButton.propTypes = {\n  className: PropTypes.string\n};\nAuthenticationButton.defaultProps = {\n  className: ''\n};\nexport default AuthenticationButton;","map":{"version":3,"sources":["/Users/toddstorm/workspace/mechanism-take-home/UI/src/components/AuthenticationButton/AuthenticationButton.js"],"names":["React","useState","Avatar","ClickAwayListener","PropTypes","_","Popper","Divider","styles","LogoutButton","useAppJwt","AuthenticationButton","className","isAuthenticated","user","anchorEl","setAnchorEl","userName","userPicture","userEmail","isEmpty","displayName","photoURL","email","handleClick","event","currentTarget","open","Boolean","handleClickAway","contains","target","combinedStyles","Container","join","buttonToShow","PopperContent","PopperAvatar","UserName","propTypes","string","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport Popper from '@material-ui/core/Popper';\nimport { Divider } from '@material-ui/core';\nimport styles from './AuthenticationButton.module.css';\nimport LogoutButton from '../LogoutButton/LogoutButton';\nimport useAppJwt from '../../hooks/useAppJwt';\n\n/*\n  Shows either login text button to allow a user to login, or a popper which will allow the user to log out or direct\n  to settings.\n*/\nconst AuthenticationButton = ({ className }) => {\n  const { isAuthenticated, user } = useAppJwt();\n  const [anchorEl, setAnchorEl] = useState(null);\n  let userName;\n  let userPicture;\n  let userEmail = '';\n\n  if (isAuthenticated && !_.isEmpty(user)) {\n    const { displayName, photoURL, email } = user;\n    userName = displayName;\n    userPicture = photoURL;\n    userEmail = email;\n  }\n\n  const handleClick = (event) => {\n    setAnchorEl(anchorEl ? null : event && event.currentTarget);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const handleClickAway = (event) => {\n    if (!anchorEl.contains(event.target)) {\n      handleClick();\n    }\n  };\n\n  const combinedStyles = [className, styles.Container].join(' ');\n  const buttonToShow = \n    <div className={styles.Container}>\n      <Avatar alt={userName} src={userPicture} onClick={handleClick} />\n      <ClickAwayListener onClickAway={handleClickAway}>\n        <Popper open={open} anchorEl={anchorEl} className={styles.Popper}>\n          <h2>My Account</h2>\n          <div className={styles.PopperContent}>\n            <Avatar\n              alt={userName}\n              src={userPicture}\n              className={styles.PopperAvatar}\n            />\n          </div>\n          <h2>{userName}</h2>\n          <h3>{userEmail}</h3>\n          <Divider className={styles.Divider} />\n          <LogoutButton />\n        </Popper>\n      </ClickAwayListener>\n    </div>;\n\n  return (\n    <div className={combinedStyles}>\n      <span className={styles.UserName}>{userName}</span>\n      {buttonToShow}\n    </div>\n  );\n};\n\nAuthenticationButton.propTypes = {\n  className: PropTypes.string,\n};\n\nAuthenticationButton.defaultProps = {\n  className: '',\n};\n\nexport default AuthenticationButton;\n"]},"metadata":{},"sourceType":"module"}